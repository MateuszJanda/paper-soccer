// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace PaperSoccer {
class NewGameMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewGameMsg>
      _instance;
} _NewGameMsg_default_instance_;
class MoveMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveMsg>
      _instance;
} _MoveMsg_default_instance_;
class UndoMoveMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndoMoveMsg>
      _instance;
} _UndoMoveMsg_default_instance_;
class EndTurnMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndTurnMsg>
      _instance;
} _EndTurnMsg_default_instance_;
class ReadyForNewGameMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadyForNewGameMsg>
      _instance;
} _ReadyForNewGameMsg_default_instance_;
class TimeoutMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeoutMsg>
      _instance;
} _TimeoutMsg_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
} _Message_default_instance_;
}  // namespace PaperSoccer
namespace protobuf_Message_2eproto {
static void InitDefaultsNewGameMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_NewGameMsg_default_instance_;
    new (ptr) ::PaperSoccer::NewGameMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::NewGameMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewGameMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNewGameMsg}, {}};

static void InitDefaultsMoveMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_MoveMsg_default_instance_;
    new (ptr) ::PaperSoccer::MoveMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::MoveMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoveMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoveMsg}, {}};

static void InitDefaultsUndoMoveMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_UndoMoveMsg_default_instance_;
    new (ptr) ::PaperSoccer::UndoMoveMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::UndoMoveMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UndoMoveMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUndoMoveMsg}, {}};

static void InitDefaultsEndTurnMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_EndTurnMsg_default_instance_;
    new (ptr) ::PaperSoccer::EndTurnMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::EndTurnMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EndTurnMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEndTurnMsg}, {}};

static void InitDefaultsReadyForNewGameMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_ReadyForNewGameMsg_default_instance_;
    new (ptr) ::PaperSoccer::ReadyForNewGameMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::ReadyForNewGameMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadyForNewGameMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadyForNewGameMsg}, {}};

static void InitDefaultsTimeoutMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_TimeoutMsg_default_instance_;
    new (ptr) ::PaperSoccer::TimeoutMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::TimeoutMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimeoutMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimeoutMsg}, {}};

static void InitDefaultsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PaperSoccer::_Message_default_instance_;
    new (ptr) ::PaperSoccer::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PaperSoccer::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NewGameMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UndoMoveMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EndTurnMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadyForNewGameMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeoutMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::NewGameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::NewGameMsg, turn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::NewGameMsg, goal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::MoveMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::MoveMsg, dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::UndoMoveMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::EndTurnMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::EndTurnMsg, timeleft_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::ReadyForNewGameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::TimeoutMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::Message, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PaperSoccer::Message, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PaperSoccer::NewGameMsg)},
  { 7, -1, sizeof(::PaperSoccer::MoveMsg)},
  { 13, -1, sizeof(::PaperSoccer::UndoMoveMsg)},
  { 18, -1, sizeof(::PaperSoccer::EndTurnMsg)},
  { 24, -1, sizeof(::PaperSoccer::ReadyForNewGameMsg)},
  { 29, -1, sizeof(::PaperSoccer::TimeoutMsg)},
  { 34, -1, sizeof(::PaperSoccer::Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_NewGameMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_MoveMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_UndoMoveMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_EndTurnMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_ReadyForNewGameMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_TimeoutMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PaperSoccer::_Message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rMessage.proto\022\013PaperSoccer\032\013MsgId.prot"
      "o\032\nGoal.proto\032\nTurn.proto\032\017Direction.pro"
      "to\032\031google/protobuf/any.proto\"N\n\nNewGame"
      "Msg\022\037\n\004turn\030\001 \001(\0162\021.PaperSoccer.Turn\022\037\n\004"
      "goal\030\002 \001(\0162\021.PaperSoccer.Goal\".\n\007MoveMsg"
      "\022#\n\003dir\030\001 \001(\0162\026.PaperSoccer.Direction\"\r\n"
      "\013UndoMoveMsg\"\036\n\nEndTurnMsg\022\020\n\010timeLeft\030\001"
      " \001(\003\"\024\n\022ReadyForNewGameMsg\"\014\n\nTimeoutMsg"
      "\"S\n\007Message\022!\n\005msgId\030\001 \001(\0162\022.PaperSoccer"
      ".MsgId\022%\n\007message\030\002 \001(\0132\024.google.protobu"
      "f.Anyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ::protobuf_MsgId_2eproto::AddDescriptors();
  ::protobuf_Goal_2eproto::AddDescriptors();
  ::protobuf_Turn_2eproto::AddDescriptors();
  ::protobuf_Direction_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Message_2eproto
namespace PaperSoccer {

// ===================================================================

void NewGameMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewGameMsg::kTurnFieldNumber;
const int NewGameMsg::kGoalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewGameMsg::NewGameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_NewGameMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.NewGameMsg)
}
NewGameMsg::NewGameMsg(const NewGameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&turn_, &from.turn_,
    static_cast<size_t>(reinterpret_cast<char*>(&goal_) -
    reinterpret_cast<char*>(&turn_)) + sizeof(goal_));
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.NewGameMsg)
}

void NewGameMsg::SharedCtor() {
  ::memset(&turn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goal_) -
      reinterpret_cast<char*>(&turn_)) + sizeof(goal_));
}

NewGameMsg::~NewGameMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.NewGameMsg)
  SharedDtor();
}

void NewGameMsg::SharedDtor() {
}

void NewGameMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewGameMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewGameMsg& NewGameMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_NewGameMsg.base);
  return *internal_default_instance();
}


void NewGameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.NewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&turn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goal_) -
      reinterpret_cast<char*>(&turn_)) + sizeof(goal_));
  _internal_metadata_.Clear();
}

bool NewGameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.NewGameMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PaperSoccer.Turn turn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_turn(static_cast< ::PaperSoccer::Turn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PaperSoccer.Goal goal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_goal(static_cast< ::PaperSoccer::Goal >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.NewGameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.NewGameMsg)
  return false;
#undef DO_
}

void NewGameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.NewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.Turn turn = 1;
  if (this->turn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->turn(), output);
  }

  // .PaperSoccer.Goal goal = 2;
  if (this->goal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->goal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.NewGameMsg)
}

::google::protobuf::uint8* NewGameMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.NewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.Turn turn = 1;
  if (this->turn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->turn(), target);
  }

  // .PaperSoccer.Goal goal = 2;
  if (this->goal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->goal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.NewGameMsg)
  return target;
}

size_t NewGameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.NewGameMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PaperSoccer.Turn turn = 1;
  if (this->turn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->turn());
  }

  // .PaperSoccer.Goal goal = 2;
  if (this->goal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->goal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewGameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.NewGameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NewGameMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewGameMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.NewGameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.NewGameMsg)
    MergeFrom(*source);
  }
}

void NewGameMsg::MergeFrom(const NewGameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.NewGameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.turn() != 0) {
    set_turn(from.turn());
  }
  if (from.goal() != 0) {
    set_goal(from.goal());
  }
}

void NewGameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.NewGameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewGameMsg::CopyFrom(const NewGameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.NewGameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewGameMsg::IsInitialized() const {
  return true;
}

void NewGameMsg::Swap(NewGameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewGameMsg::InternalSwap(NewGameMsg* other) {
  using std::swap;
  swap(turn_, other->turn_);
  swap(goal_, other->goal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewGameMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveMsg::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveMsg::MoveMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_MoveMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.MoveMsg)
}
MoveMsg::MoveMsg(const MoveMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dir_ = from.dir_;
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.MoveMsg)
}

void MoveMsg::SharedCtor() {
  dir_ = 0;
}

MoveMsg::~MoveMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.MoveMsg)
  SharedDtor();
}

void MoveMsg::SharedDtor() {
}

void MoveMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveMsg& MoveMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_MoveMsg.base);
  return *internal_default_instance();
}


void MoveMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.MoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_ = 0;
  _internal_metadata_.Clear();
}

bool MoveMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.MoveMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PaperSoccer.Direction dir = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dir(static_cast< ::PaperSoccer::Direction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.MoveMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.MoveMsg)
  return false;
#undef DO_
}

void MoveMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.MoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.Direction dir = 1;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dir(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.MoveMsg)
}

::google::protobuf::uint8* MoveMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.MoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.Direction dir = 1;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dir(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.MoveMsg)
  return target;
}

size_t MoveMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.MoveMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PaperSoccer.Direction dir = 1;
  if (this->dir() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dir());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.MoveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.MoveMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.MoveMsg)
    MergeFrom(*source);
  }
}

void MoveMsg::MergeFrom(const MoveMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.MoveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dir() != 0) {
    set_dir(from.dir());
  }
}

void MoveMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.MoveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveMsg::CopyFrom(const MoveMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.MoveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveMsg::IsInitialized() const {
  return true;
}

void MoveMsg::Swap(MoveMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveMsg::InternalSwap(MoveMsg* other) {
  using std::swap;
  swap(dir_, other->dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndoMoveMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndoMoveMsg::UndoMoveMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_UndoMoveMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.UndoMoveMsg)
}
UndoMoveMsg::UndoMoveMsg(const UndoMoveMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.UndoMoveMsg)
}

void UndoMoveMsg::SharedCtor() {
}

UndoMoveMsg::~UndoMoveMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.UndoMoveMsg)
  SharedDtor();
}

void UndoMoveMsg::SharedDtor() {
}

void UndoMoveMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UndoMoveMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndoMoveMsg& UndoMoveMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_UndoMoveMsg.base);
  return *internal_default_instance();
}


void UndoMoveMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.UndoMoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UndoMoveMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.UndoMoveMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.UndoMoveMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.UndoMoveMsg)
  return false;
#undef DO_
}

void UndoMoveMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.UndoMoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.UndoMoveMsg)
}

::google::protobuf::uint8* UndoMoveMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.UndoMoveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.UndoMoveMsg)
  return target;
}

size_t UndoMoveMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.UndoMoveMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndoMoveMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.UndoMoveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UndoMoveMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UndoMoveMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.UndoMoveMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.UndoMoveMsg)
    MergeFrom(*source);
  }
}

void UndoMoveMsg::MergeFrom(const UndoMoveMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.UndoMoveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UndoMoveMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.UndoMoveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndoMoveMsg::CopyFrom(const UndoMoveMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.UndoMoveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndoMoveMsg::IsInitialized() const {
  return true;
}

void UndoMoveMsg::Swap(UndoMoveMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndoMoveMsg::InternalSwap(UndoMoveMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UndoMoveMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndTurnMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndTurnMsg::kTimeLeftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndTurnMsg::EndTurnMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_EndTurnMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.EndTurnMsg)
}
EndTurnMsg::EndTurnMsg(const EndTurnMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeleft_ = from.timeleft_;
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.EndTurnMsg)
}

void EndTurnMsg::SharedCtor() {
  timeleft_ = GOOGLE_LONGLONG(0);
}

EndTurnMsg::~EndTurnMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.EndTurnMsg)
  SharedDtor();
}

void EndTurnMsg::SharedDtor() {
}

void EndTurnMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EndTurnMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndTurnMsg& EndTurnMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_EndTurnMsg.base);
  return *internal_default_instance();
}


void EndTurnMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.EndTurnMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeleft_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool EndTurnMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.EndTurnMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timeLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeleft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.EndTurnMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.EndTurnMsg)
  return false;
#undef DO_
}

void EndTurnMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.EndTurnMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timeLeft = 1;
  if (this->timeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timeleft(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.EndTurnMsg)
}

::google::protobuf::uint8* EndTurnMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.EndTurnMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timeLeft = 1;
  if (this->timeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timeleft(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.EndTurnMsg)
  return target;
}

size_t EndTurnMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.EndTurnMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 timeLeft = 1;
  if (this->timeleft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeleft());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EndTurnMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.EndTurnMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const EndTurnMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndTurnMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.EndTurnMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.EndTurnMsg)
    MergeFrom(*source);
  }
}

void EndTurnMsg::MergeFrom(const EndTurnMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.EndTurnMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeleft() != 0) {
    set_timeleft(from.timeleft());
  }
}

void EndTurnMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.EndTurnMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndTurnMsg::CopyFrom(const EndTurnMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.EndTurnMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndTurnMsg::IsInitialized() const {
  return true;
}

void EndTurnMsg::Swap(EndTurnMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndTurnMsg::InternalSwap(EndTurnMsg* other) {
  using std::swap;
  swap(timeleft_, other->timeleft_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EndTurnMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadyForNewGameMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadyForNewGameMsg::ReadyForNewGameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_ReadyForNewGameMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.ReadyForNewGameMsg)
}
ReadyForNewGameMsg::ReadyForNewGameMsg(const ReadyForNewGameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.ReadyForNewGameMsg)
}

void ReadyForNewGameMsg::SharedCtor() {
}

ReadyForNewGameMsg::~ReadyForNewGameMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.ReadyForNewGameMsg)
  SharedDtor();
}

void ReadyForNewGameMsg::SharedDtor() {
}

void ReadyForNewGameMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadyForNewGameMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadyForNewGameMsg& ReadyForNewGameMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_ReadyForNewGameMsg.base);
  return *internal_default_instance();
}


void ReadyForNewGameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.ReadyForNewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadyForNewGameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.ReadyForNewGameMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.ReadyForNewGameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.ReadyForNewGameMsg)
  return false;
#undef DO_
}

void ReadyForNewGameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.ReadyForNewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.ReadyForNewGameMsg)
}

::google::protobuf::uint8* ReadyForNewGameMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.ReadyForNewGameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.ReadyForNewGameMsg)
  return target;
}

size_t ReadyForNewGameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.ReadyForNewGameMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadyForNewGameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.ReadyForNewGameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadyForNewGameMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadyForNewGameMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.ReadyForNewGameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.ReadyForNewGameMsg)
    MergeFrom(*source);
  }
}

void ReadyForNewGameMsg::MergeFrom(const ReadyForNewGameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.ReadyForNewGameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadyForNewGameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.ReadyForNewGameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadyForNewGameMsg::CopyFrom(const ReadyForNewGameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.ReadyForNewGameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyForNewGameMsg::IsInitialized() const {
  return true;
}

void ReadyForNewGameMsg::Swap(ReadyForNewGameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadyForNewGameMsg::InternalSwap(ReadyForNewGameMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadyForNewGameMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeoutMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeoutMsg::TimeoutMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_TimeoutMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.TimeoutMsg)
}
TimeoutMsg::TimeoutMsg(const TimeoutMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.TimeoutMsg)
}

void TimeoutMsg::SharedCtor() {
}

TimeoutMsg::~TimeoutMsg() {
  // @@protoc_insertion_point(destructor:PaperSoccer.TimeoutMsg)
  SharedDtor();
}

void TimeoutMsg::SharedDtor() {
}

void TimeoutMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeoutMsg::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeoutMsg& TimeoutMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_TimeoutMsg.base);
  return *internal_default_instance();
}


void TimeoutMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.TimeoutMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TimeoutMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.TimeoutMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.TimeoutMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.TimeoutMsg)
  return false;
#undef DO_
}

void TimeoutMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.TimeoutMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.TimeoutMsg)
}

::google::protobuf::uint8* TimeoutMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.TimeoutMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.TimeoutMsg)
  return target;
}

size_t TimeoutMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.TimeoutMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeoutMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.TimeoutMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeoutMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeoutMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.TimeoutMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.TimeoutMsg)
    MergeFrom(*source);
  }
}

void TimeoutMsg::MergeFrom(const TimeoutMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.TimeoutMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TimeoutMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.TimeoutMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeoutMsg::CopyFrom(const TimeoutMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.TimeoutMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeoutMsg::IsInitialized() const {
  return true;
}

void TimeoutMsg::Swap(TimeoutMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeoutMsg::InternalSwap(TimeoutMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeoutMsg::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::PaperSoccer::_Message_default_instance_._instance.get_mutable()->message_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Message::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMsgIdFieldNumber;
const int Message::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Message_2eproto::scc_info_Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaperSoccer.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::google::protobuf::Any(*from.message_);
  } else {
    message_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:PaperSoccer.Message)
}

void Message::SharedCtor() {
  ::memset(&message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&message_)) + sizeof(msgid_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:PaperSoccer.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Message_2eproto::scc_info_Message.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:PaperSoccer.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  msgid_ = 0;
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaperSoccer.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PaperSoccer.MsgId msgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgid(static_cast< ::PaperSoccer::MsgId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PaperSoccer.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaperSoccer.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaperSoccer.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.MsgId msgId = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // .google.protobuf.Any message = 2;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PaperSoccer.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaperSoccer.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PaperSoccer.MsgId msgId = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // .google.protobuf.Any message = 2;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaperSoccer.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaperSoccer.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any message = 2;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // .PaperSoccer.MsgId msgId = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaperSoccer.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaperSoccer.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaperSoccer.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaperSoccer.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::google::protobuf::Any::MergeFrom(from.message());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaperSoccer.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaperSoccer.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PaperSoccer
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::NewGameMsg* Arena::CreateMaybeMessage< ::PaperSoccer::NewGameMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::NewGameMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::MoveMsg* Arena::CreateMaybeMessage< ::PaperSoccer::MoveMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::MoveMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::UndoMoveMsg* Arena::CreateMaybeMessage< ::PaperSoccer::UndoMoveMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::UndoMoveMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::EndTurnMsg* Arena::CreateMaybeMessage< ::PaperSoccer::EndTurnMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::EndTurnMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::ReadyForNewGameMsg* Arena::CreateMaybeMessage< ::PaperSoccer::ReadyForNewGameMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::ReadyForNewGameMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::TimeoutMsg* Arena::CreateMaybeMessage< ::PaperSoccer::TimeoutMsg >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::TimeoutMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PaperSoccer::Message* Arena::CreateMaybeMessage< ::PaperSoccer::Message >(Arena* arena) {
  return Arena::CreateInternal< ::PaperSoccer::Message >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
