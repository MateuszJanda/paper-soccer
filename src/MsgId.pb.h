// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgId.proto

#ifndef PROTOBUF_INCLUDED_MsgId_2eproto
#define PROTOBUF_INCLUDED_MsgId_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_MsgId_2eproto 

namespace protobuf_MsgId_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_MsgId_2eproto
namespace PaperSoccer {
}  // namespace PaperSoccer
namespace PaperSoccer {

enum MsgId {
  NewGame = 0,
  Move = 1,
  UndoMove = 2,
  EndTurn = 3,
  ReadyForNewGame = 4,
  Timeout = 5,
  MsgId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgId_IsValid(int value);
const MsgId MsgId_MIN = NewGame;
const MsgId MsgId_MAX = Timeout;
const int MsgId_ARRAYSIZE = MsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgId_descriptor();
inline const ::std::string& MsgId_Name(MsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgId_descriptor(), value);
}
inline bool MsgId_Parse(
    const ::std::string& name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
    MsgId_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace PaperSoccer

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PaperSoccer::MsgId> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PaperSoccer::MsgId>() {
  return ::PaperSoccer::MsgId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_MsgId_2eproto
